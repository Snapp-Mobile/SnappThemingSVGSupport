# This workflow will test a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Package Test
env:
    EXTRACT_COVERAGE: '.github/scripts/extract_coverage.sh'
    CREATE_COMMENT: '.github/scripts/create_pr_comment.js'
    COVERAGE_REPORT_PATH: './coverage/coverage.xcresult'
    XCODE_VERSION: 'Xcode_16.2.app'
    XCODE_PATH: '/Applications/Xcode_16.2.app/Contents/Developer'
    COVERAGE_SUMMARY_FILE: 'pr_coverage_summary.txt'
    BOT_COMMENT_HEADER: '### 🛡️ Code Coverage Report'

on:
    push:
        branches: [ "main" ]
        pull_request:
        branches: [ "main" ]

jobs:
    build:
        runs-on: macos-latest

        steps:
        - uses: actions/checkout@v4

        - name: List Xcode Installations
          run: sudo ls -1 /Applications | grep "Xcode"

        - name: Select Xcode
          run: sudo xcode-select -s ${{ env.XCODE_PATH }}

        - name: Run Swift Tests with Coverage
          run: |
            swift test --enable-swift-testing --enable-code-coverage
            CODECOV_PATH=$(swift test --enable-code-coverage --show-codecov-path)
            echo "CODECOV_PATH=${CODECOV_PATH}" >> $GITHUB_ENV

        - name: Run Coverage Extraction Script
          run: bash ${{ env.EXTRACT_COVERAGE }}

        - name: Comment on Pull Request
          if: github.event_name == 'pull_request'
          uses: actions/github-script@v6
          with:
            script-path: ${{ env.CREATE_COMMENT }}
